# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class SyncTools < Formula
  desc "Go CLI wrapper around rsync with advanced filtering and SyncFile post-sync actions"
  homepage "https://github.com/DamianReeves/sync-tools"
  version "0.4.0"
  license "Apache-2.0"

  depends_on "rsync" => :runtime

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/DamianReeves/sync-tools/releases/download/v0.4.0/sync-tools_0.4.0_darwin_amd64.tar.gz"
      sha256 "dac02a9fe68c439145ae377bfc1f9e951199ff94da3e0f38ce0df479f3ddfb77"

      def install
        bin.install "sync-tools"

        # Generate and install shell completions if available
        if File.exist?(buildpath/"completions")
          bash_completion.install "completions/sync-tools.bash" => "sync-tools"
          zsh_completion.install "completions/_sync-tools"
          fish_completion.install "completions/sync-tools.fish"
        end
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/DamianReeves/sync-tools/releases/download/v0.4.0/sync-tools_0.4.0_darwin_arm64.tar.gz"
      sha256 "3ceac1940ab439870e07aa94823f2259d79a134a7120477e1e4b8e3f57fc3a5f"

      def install
        bin.install "sync-tools"

        # Generate and install shell completions if available
        if File.exist?(buildpath/"completions")
          bash_completion.install "completions/sync-tools.bash" => "sync-tools"
          zsh_completion.install "completions/_sync-tools"
          fish_completion.install "completions/sync-tools.fish"
        end
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/DamianReeves/sync-tools/releases/download/v0.4.0/sync-tools_0.4.0_linux_amd64.tar.gz"
      sha256 "d82c8f61ffc001d398b0f16ee0a8ee94e3296319e2eb10f6933686e13f8ff441"
      def install
        bin.install "sync-tools"

        # Generate and install shell completions if available
        if File.exist?(buildpath/"completions")
          bash_completion.install "completions/sync-tools.bash" => "sync-tools"
          zsh_completion.install "completions/_sync-tools"
          fish_completion.install "completions/sync-tools.fish"
        end
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/DamianReeves/sync-tools/releases/download/v0.4.0/sync-tools_0.4.0_linux_arm64.tar.gz"
      sha256 "3b620ac9e189979c3898912e5295be142c8ccb5dee0dda96ace19b52ea767866"
      def install
        bin.install "sync-tools"

        # Generate and install shell completions if available
        if File.exist?(buildpath/"completions")
          bash_completion.install "completions/sync-tools.bash" => "sync-tools"
          zsh_completion.install "completions/_sync-tools"
          fish_completion.install "completions/sync-tools.fish"
        end
      end
    end
  end

  test do
    assert_match version.to_s, shell_output("#{bin}/sync-tools --version 2>&1")

    # Test basic help functionality
    assert_match "Advanced directory synchronization", shell_output("#{bin}/sync-tools --help")

    # Test subcommands exist
    assert_match "sync", shell_output("#{bin}/sync-tools --help")
    assert_match "syncfile", shell_output("#{bin}/sync-tools --help")
  end
end
